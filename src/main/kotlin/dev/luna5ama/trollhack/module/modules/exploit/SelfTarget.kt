package dev.luna5ama.trollhack.module.modules.exploit

import dev.luna5ama.trollhack.event.events.ConnectionEvent
import dev.luna5ama.trollhack.event.events.TickEvent
import dev.luna5ama.trollhack.event.events.render.RenderEntityEvent
import dev.luna5ama.trollhack.event.listener
import dev.luna5ama.trollhack.event.safeParallelListener
import dev.luna5ama.trollhack.module.Category
import dev.luna5ama.trollhack.module.Module
import dev.luna5ama.trollhack.util.threads.onMainThread
import dev.luna5ama.trollhack.util.threads.runSafe
import net.minecraft.client.entity.EntityOtherPlayerMP
import com.mojang.authlib.GameProfile
import java.util.*

internal object SelfTarget : Module(
    name = "SelfTarget",
    description = "target urself",
    category = Category.EXPLOIT
) {
    private const val ENTITY_ID = -696969421
    private var fakePlayer: EntityOtherPlayerMP? = null
    private const val PLAYER_NAME = "43298231"
    private const val visible = false
    override fun getHudInfo(): String {
        return PLAYER_NAME
    }

    init {
        onEnable {
            runSafe {
                fakePlayer = EntityOtherPlayerMP(mc.world, GameProfile(UUID.randomUUID(), PLAYER_NAME)).apply {
                    mc.player?.let {
                        setPosition(it.posX, it.posY, it.posZ)
                    }
                }.also {
                    onMainThread {
                        mc.world?.addEntityToWorld(ENTITY_ID, it)
                    }
                }
            } ?: disable()
        }

        onDisable {
            onMainThread {
                fakePlayer?.setDead()
                mc.world?.removeEntityFromWorld(ENTITY_ID)
                fakePlayer = null
            }
        }

        listener<ConnectionEvent.Disconnect> {
            disable()
        }
        listener<RenderEntityEvent.All.Pre> {
            if (it.entity === fakePlayer) {
                it.cancelled = !visible
            }
        }

        safeParallelListener<TickEvent.Post> {
            val fakePlayer = fakePlayer ?: return@safeParallelListener
            val player = mc.player ?: return@safeParallelListener

            fakePlayer.setPosition(player.posX, player.posY, player.posZ)
        }
    }
}